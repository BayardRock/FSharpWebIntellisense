@section css
{
    <link href="~/content/codemirror.css" rel="stylesheet" />
}

@section scripts
{
    <script src="~/scripts/codemirror/codemirror.js"></script>
    <script src="~/scripts/codemirror/codemirror-intellisense.js"></script>
    <script src="~/scripts/codemirror/codemirror-compiler.js"></script>
    <script src="~/scripts/codemirror/mode/fsharp.js"></script>
    <script src="~/scripts/jquery.signalR-2.0.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function ()
        {
            var interactiveSession = $.connection.interactiveSessionHub;

            // this will be a reference to the callback that the intellisense provider is expecting
            // to be called when declarations are sent from the server to the client, we need this because
            // we are using signalr and not regular web api calls
            var intellisenseCallback = null;
            var compileCallback = null;

            // called by the server whenever intellisense declarations are ready
            interactiveSession.client.sendDeclarations = function (declarations)
            {
                if (declarations.length > 0)
                {
                    var newDeclarations = declarations.map(function (item)
                    {
                        return { name: item.Name, glyph: item.Glyph, documentation: item.Documentation };
                    });
                    intellisenseCallback(newDeclarations);
                }
            };

            // called by the server whenever errors are ready
            interactiveSession.client.sendErrors = function (errors)
            {
                var newErrors = errors.map(function (item)
                {
                    return { startLine: item.StartLine, startColumn: item.StartColumn, endLine: item.EndLine, endColumn: item.EndColumn, message: item.Message };
                });
                compileCallback(newErrors);
            };

            $.connection.hub.start()
                .done(function (signalr)
                {
                    console.log('done()', signalr);

                    // setup the CodeMirror editor with fsharp mode
                    var editor = CodeMirror(document.getElementById('editor'),
                    {
                        value: "let x = 1",
                        mode: 'fsharp',
                        lineNumbers: true
                    });
                    editor.focus();

                    // request errors from the server
                    new Compiler(editor, function (cb)
                    {
                        compileCallback = cb;
                        interactiveSession.server.compile(editor.getValue());
                    });

                    // request declarations from the server
                    new Intellisense(editor, function (cb, position)
                    {
                        intellisenseCallback = cb;
                        interactiveSession.server.getDeclarations(editor.getValue(), position.line, position.ch);
                    });
                })
                .fail(function (ex)
                {
                    alert('Unable to connect to signalr: ' + ex.message)
                });
        });
    </script>
}

<h1>SignalR Implementation</h1>
<p>This is the SignalR implementation for intellisense</p>

<h2>CodeMirror F# Editor</h2>
<div id="editor"></div>